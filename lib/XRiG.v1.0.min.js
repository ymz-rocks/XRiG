function XRiG(t) { function e() { } function i(e, i, n, r, s) { this.top = r * s, this.left = n * s, this.radius = s / 2, this.value = 0, this.right = this.left + s, this.bottom = this.top + s, this.space = 0, this.offset = 0, t.style.space && t.style.space > 0 && (this.space = t.style.space, this.offset = this.space / (this.space - 2)), this.active = function (t) { var i = t.offsetX || t.layerX - e.offsetLeft, n = t.offsetY || t.layerY - e.offsetTop; return i > this.left && i < this.right && n > this.top && n < this.bottom }, this.draw = function () { var e = this.left + this.radius + this.offset, n = this.top + this.radius + this.offset, r = this.radius - this.space; i.clearRect(this.left, this.top, s, s), i.beginPath(), i.arc(e, n, r, 0, 2 * Math.PI, !0), i.closePath(), i.fillStyle = a.pallete[this.value].replace("1)", t.style.alpha + ")"), i.fill() }, this.update = function (e, i) { i || (i = 0), this.value += t.tolerance > i ? 1 : -1, this.value == a.pallete.length ? this.value = 0 : this.value < 0 && (this.value = a.pallete.length - 1), this.draw() } } function n(t) { this.code = t, this.hex = t.toString(16).toUpperCase(), 1 == this.hex.length && (this.hex = "0" + this.hex) } if (t) { var a = {}, r = this; e.color = function (t) { return "rgba(" + t.join(",") + ",1)" }, e.getElement = function (t, e) { var i = document.getElementsByTagName(e); return i && i[0] ? i[0] : void 0 }, e.on = function (t, e, i) { i || (i = window), window.attachEvent ? i.attachEvent("on" + t, e) : i.addEventListener(t, e, !1) }, n.prototype.toString = function () { return this.hex }, this.draw = function (e, n) { for (var r, s, o = t.size.canvas / t.size.rig, h = 0; h < a.matrix.length; h++) r = h % t.size.rig, s = parseInt(h / t.size.rig), a.init && (a.matrix[h] = new i(n, e, r, s, o)), a.matrix[h].draw() }, this.each = function (t) { if (t) for (var e in a.matrix) t(a.matrix[e], e) }, this.refresh = function () { var i = e.getElement(t.parent || document, "x-rig"); if (i) { var n = e.getElement(i, "canvas"); if (n && n.getContext) { n.width = n.height = t.size.canvas; var s = n.getContext("2d"); i.style.display = "block", i.style.width = t.size.canvas + "px", i.style.margin = "0 auto", r.draw(s, n), a.init && (e.on("mousedown", function (t) { a.time = (new Date).getTime() }), e.on("mouseup", function (t) { t.stopPropagation && t.stopPropagation(), a.matrix.filter(function (e) { return e.active(t) })[0].update(t, (new Date).getTime() - a.time), a.fire.change() }, n), a.fire.load()) } } }, this.reset = function () { this.each(function (t) { t.value = 0, t.draw() }), a.fire.change() }, this.val = function () { for (var t, e = [], i = 0; i < a.matrix.length; i += 2) t = a.matrix[i + 1] ? a.matrix[i + 1].value : 0, e.push(new n(10 * a.matrix[i].value + t)); return e }, t.size = t.size || {}, t.size.rig = t.size.rig || 4, t.size.canvas = t.size.canvas || 200, t.style = t.style || {}, t.style.alpha = t.style.alpha || 1, t.tolerance = t.tolerance || 150, t.on = t.on || {}, a.init = !0, a.matrix = new Array(Math.pow(t.size.rig, 2)), a.pallete = t.palette.map(function (t) { return e.color(t) }), a.fire = { change: function () { t.on.change && t.on.change(r.val()) }, load: function () { a.init = !1, t.on.load && t.on.load(r) } }, e.on("load", this.refresh) } } Array.prototype.filter || (Array.prototype.filter = function (t) { "use strict"; if (void 0 === this || null === this) throw new TypeError; var e = Object(this), i = e.length >>> 0; if ("function" != typeof t) throw new TypeError; for (var n = [], a = arguments.length >= 2 ? arguments[1] : void 0, r = 0; i > r; r++) r in e && t.call(a, e[r], r, e) && n.push(e[r]); return n }), Array.prototype.map || (Array.prototype.map = function (t, e) { var i, n, a, r, s; if (null == this) throw new TypeError(" this is null or not defined"); var o = Object(this), h = o.length >>> 0; if ("function" != typeof t) throw new TypeError(t + " is not a function"); for (arguments.length > 1 && (i = e), n = new Array(h), a = 0; h > a;) a in o && (r = o[a], s = t.call(i, r, a, o), n[a] = s), a++; return n });